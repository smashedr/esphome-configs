# PIR - BENCHED

substitutions:
  # https://esphome.io/components/substitutions
  box_num: "48"
  box_name: "esptest"
  type: "esp32"
  board: "nodemcu-32s"
  comment: "38-pin (narrow)"

packages:
  # https://esphome.io/components/packages.html
  debug: !include { file: include/debug.yaml }
  common: !include { file: include/common.yaml }
  status_led: !include
    file: include/status_led.yaml
    vars:
      pin: GPIO26

esphome:
  # https://esphome.io/components/esphome
  on_boot:
    - priority: -200
      then:
        - logger.log: "Boot -200"

logger:
  # https://esphome.io/components/logger
  on_message:
    level: ERROR
    then:
      - number.increment: error_log_count

wifi:
  # https://esphome.io/components/wifi
  on_connect:
    - logger.log: "WiFi Connected..."
  on_disconnect:
    - logger.log: "WiFi Disconnected!"
    - number.increment: wifi_dc_count

api:
  # https://esphome.io/components/api
  on_client_connected:
    - lambda: |-
        if (client_info.find("Home Assistant") != std::string::npos) {
          ESP_LOGI("api", "API Connected: Home Assistant (%s)", client_address.c_str());
        } else {
          ESP_LOGI("api", "Client Connected: %s (%s)", client_info.c_str(), client_address.c_str());
        }
  on_client_disconnected:
    - lambda: |-
        if (client_info.find("Home Assistant") != std::string::npos) {
          ESP_LOGW("api", "API Disconnected: Home Assistant (%s)", client_address.c_str());
        } else {
          ESP_LOGI("api", "Client Disconnected: %s (%s)", client_info.c_str(), client_address.c_str());
        }

web_server:
  # https://esphome.io/components/web_server
  sorting_groups:
    - id: sg_lights
      name: "Lights"
      sorting_weight: -30

light:
  # https://esphome.io/components/light/
  - platform: monochromatic
    name: "Monochromatic Light ${box_num}"
    id: chromatic_led
    icon: mdi:lightbulb-outline
    output: mono_chromo
    effects: !include { file: include/light/effects/pulse.yaml }
    web_server:
      sorting_group_id: sg_lights
      sorting_weight: 10

number:
  # https://esphome.io/#number-components
  - platform: template
    name: "Error Count ${box_num}"
    id: error_log_count
    icon: mdi:alert-plus
    entity_category: diagnostic
    optimistic: true
    restore_value: false
    initial_value: 0
    min_value: 0
    max_value: 999
    step: 1
    web_server:
      sorting_group_id: sg_device
      sorting_weight: -19

  - platform: template
    name: "API Disconnect Count ${box_num}"
    id: api_dc_count
    icon: mdi:web-plus
    entity_category: diagnostic
    optimistic: true
    restore_value: false
    initial_value: 0
    min_value: 0
    max_value: 999
    step: 1
    web_server:
      sorting_group_id: sg_device
      sorting_weight: -18

  - platform: template
    name: "WIFI Disconnect Count ${box_num}"
    id: wifi_dc_count
    icon: mdi:wifi-plus
    entity_category: diagnostic
    optimistic: true
    restore_value: false
    initial_value: 0
    min_value: 0
    max_value: 999
    step: 1
    web_server:
      sorting_group_id: sg_device
      sorting_weight: -17

#switch:
#  - platform: template
#    name: "Presence Light ${box_num}"
#    id: presence_light
#    icon: mdi:alarm-light-off-outline
#    optimistic: true
#    restore_mode: RESTORE_DEFAULT_OFF
#    turn_on_action:
#      - if:
#          condition:
#            - binary_sensor.is_on: presence
#          then:
#            - light.turn_on: mono_chromo
#    turn_off_action:
#      - light.turn_off: mono_chromo

#remote_receiver:
#  pin: GPIO23
#  dump: all
#  on_raw:
#    then:
#      - logger.log: "RX on_raw"
#      - light.toggle: rgb_led

output:
  # https://esphome.io/components/output/
  - platform: ledc
    id: mono_chromo
    pin: GPIO25
    max_power: 80%

  #- platform: ledc
  #  id: rgb_r
  #  pin: GPIO27
  #  max_power: 75%
  #- platform: ledc
  #  id: rgb_g
  #  pin: GPIO14
  #  max_power: 80%
  #- platform: ledc
  #  id: rgb_b
  #  pin: GPIO12
  #  max_power: 80%

switch:
  # https://esphome.io/#switch-components
  - !include {
      file: include/switch/toggle_component.yaml,
      vars: { name: Photoresistor, component: photoresistor },
    }

binary_sensor:
  # https://esphome.io/#binary-sensor-components
  - platform: gpio
    name: "Touch 1 - ${box_num}"
    id: touch_1
    icon: mdi:gesture-tap-box
    pin:
      number: 16
      mode: INPUT_PULLUP
    on_press:
      then:
        - light.toggle: chromatic_led

  #- !include { file: include/binary/api_connected.yaml }

  - id: !extend api_status
    on_press:
      then:
        - logger.log:
            format: "API Connected..."
            level: INFO
    on_release:
      then:
        - number.increment: api_dc_count
        - logger.log:
            format: "API Disconnected!"
            level: WARN

  #- platform: gpio
  #  pin: GPIO19
  #  name: "Presence ${box_num}"
  #  id: presence
  #  #icon: mdi:motion-sensor
  #  device_class: motion
  #  #filters:
  #  #  - delayed_off: 60s
  #  on_press:
  #    then:
  #      - if:
  #          condition:
  #            - switch.is_on: presence_light
  #          then:
  #            - light.turn_on: main_led
  #  on_release:
  #    then:
  #      - light.turn_off: main_led

sensor:
  # https://esphome.io/components/sensor/adc
  - platform: adc
    name: "Photoresistor ${box_num}"
    id: photoresistor
    icon: mdi:lightning-bolt-circle
    pin: GPIO36
    attenuation: 12db
    update_interval: 1s
    disabled_by_default: true
