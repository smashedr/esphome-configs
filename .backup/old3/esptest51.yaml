substitutions:
  box_num: "51"
  box_name: "esptest"
  type: "esp32"
  board: "nodemcu-32s"
  comment: "38-pin narrow"
  update_interval: "1min"

<<: !include .common.yaml

esphome:
  name: "${box_name}${box_num}"
  comment: "${type}: ${board} (${comment})"
  includes: !include include/includes.yaml

web_server: !include include/web_server.yaml
button: !include include/button.yaml
captive_portal:

# light:
# - platform: rgb
# name: "Test LED ${box_num}"
# red: red_1
# green: green_1
# blue: blue_1

# output:
# - platform: ledc
# id: red_1
# pin: 32

# - platform: ledc
# id: green_1
# pin: 33

# - platform: ledc
# id: blue_1
# pin: 25

light:
  - platform: binary
    name: "Red ${box_num}"
    internal: true
    id: red_light
    output: red_o

  - platform: binary
    name: "Yellow${box_num}"
    internal: true
    id: yellow_light
    output: yellow_o

  - platform: binary
    name: "Green ${box_num}"
    internal: true
    id: green_light
    output: green_o

output:
  - id: red_o
    platform: gpio
    pin: 32

  - id: yellow_o
    platform: gpio
    pin: 33

  - id: green_o
    platform: gpio
    pin: 25

i2c:
  scan: false

text_sensor:
  - platform: debug
    device:
      name: "Info ${box_num}"
    reset_reason:
      name: "Reset Reason ${box_num}"

binary_sensor:
  - platform: status
    name: "Status ${box_num}"

  - platform: gpio
    pin:
      number: 23
      mode: INPUT_PULLUP
    name: "Physical Button ${box_num}"
    entity_category: diagnostic
    icon: mdi:radiobox-marked
    filters:
      - invert:
    on_multi_click:
      - timing:
          - ON for at least 5s
        then:
          - logger.log: "5 Second Reset"
          - button.press: reboot_device
      # - timing:
      # - ON for at least 2s
      # - OFF for at least 0.1s
      # then:
      # - logger.log: "2 Second Light"
      # - light.toggle: main_led
      - timing:
          - ON for at most 4.9s
          - OFF for at least 0.1s
        then:
          - logger.log: "Single Click"
          - component.update: bmp280_sensor

sensor:
  - platform: debug
    free:
      name: "Heap Free ${box_num}"
    block:
      name: "Heap Max Block ${box_num}"
    loop_time:
      name: "Loop Time ${box_num}"

  - platform: uptime
    name: "Uptime ${box_num}"
    update_interval: 5min

  - platform: wifi_signal
    name: "WiFi Signal ${box_num}"
    update_interval: "${update_interval}"
    filters:
      - filter_out: 0
      - median:

  # - platform: custom
  # lambda: |-
  # auto my_sensor = new SystemStatsSensor();
  # App.register_component(my_sensor);
  # return {my_sensor->heap_free_sensor};

  # sensors:
  # - name: "Heap Free ${box_num}"
  # unit_of_measurement: "%"
  # accuracy_decimals: 1
  # entity_category: diagnostic
  # icon: mdi:memory

  - platform: bmp280
    address: 0x76
    update_interval: "${update_interval}"
    id: bmp280_sensor
    temperature:
      name: "TestTemp${box_num}-280"
      on_value_range:
        - below: 22.2
          then:
            - logger.log: "Green Light"
            - light.turn_on: green_light
            - light.turn_off: yellow_light
            - light.turn_off: red_light
        - above: 22.2
          below: 23.3
          then:
            - logger.log: "Yellow Light"
            - light.turn_on: yellow_light
            - light.turn_off: green_light
            - light.turn_off: red_light
        - above: 23.3
          then:
            - logger.log: "Red Light"
            - light.turn_on: red_light
            - light.turn_off: green_light
            - light.turn_off: yellow_light
    pressure:
      name: "TestPres${box_num}-280"
