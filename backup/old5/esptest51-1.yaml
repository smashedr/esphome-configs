substitutions:
  box_num: "51"
  box_name: "esptest"
  type: "esp32"
  board: "nodemcu-32s"
  comment: "38-pin narrow"
  update_interval: "1min"
  force_update: "true"
  led_pin: "18"

<<: !include .common.yaml

logger:
  level: VERBOSE

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: !secret local_domain
  fast_connect: true
  use_address: "192.168.1.2${box_num}"
  manual_ip:
    static_ip: "192.168.1.2${box_num}"
    gateway: 192.168.1.1
    subnet: 255.255.255.0
  ap:
    ssid: "${box_name}${box_num}"
    password: !secret host_pass


esphome:
  name: "${box_name}${box_num}"
  comment: "${type}: ${board} (${comment})"

web_server: !include include/web_server.yaml
button: !include include/button.yaml
captive_portal:


light:
  - platform: status_led
    id: main_led
    pin: ${led_pin}


# switch:
  # - platform: gpio
    # name: "Pause Count"
    # id: pause_count
    # pin:
      # number: 19
      # mode: INPUT_PULLUP
    # on_turn_on:
      # - logger.log: "Pause Button Pressed..."
      # - switch.toggle: pause_count


switch:
  - platform: template
    name: "Pause Count"
    id: pause_count
    optimistic: true


binary_sensor:
  - platform: status
    name: "Status ${box_num}"


  - platform: gpio
    name: "Pause Button"
    id: pause_button
    pin:
      number: 19
      mode: INPUT_PULLUP
    # internal: true
    entity_category: config
    icon: mdi:radiobox-marked
    filters:
      - invert:
    on_multi_click:
    - timing:
        - ON for at least 3s
      then:
        - logger.log: "3 Second Reset"
        - number.operation:
            id: parts_count
            operation: TO_MIN
            cycle: true
    - timing:
        - ON for at most 2.9s
        - OFF for at least 0.1s
      then:
        - logger.log: "Toggle Pause Count"
        - switch.toggle: pause_count


  - platform: gpio
    pin: 32
    name: "PIR ${box_num}"
    device_class: motion
    on_press:
      then:
        - light.turn_on: main_led
        # - number.decrement:
            # id: parts_count
            # cycle: false
        - number.operation:
            id: parts_count
            cycle: false
            operation: !lambda |-
                return NUMBER_OP_INCREMENT;
    on_release:
      then:
        - light.turn_off: main_led


sensor:
  - platform: uptime
    name: "Uptime ${box_num}"
    update_interval: 5min

  - platform: internal_temperature
    name: "Core Temp ${box_num}"
    update_interval: 5min

  - platform: wifi_signal
    name: "WiFi Signal ${box_num}"
    update_interval: 1min
    force_update: true
    filters:
      - filter_out: 0
      - median:


number:
  - platform: template
    name: "Parts Count"
    id: parts_count
    icon: "mdi:counter"
    optimistic: true
    min_value: 0
    max_value: 999999
    step: 1
    restore_value: true
    initial_value: 0
