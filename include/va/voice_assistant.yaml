# https://esphome.io/components/voice_assistant
# voice_assistant: github://smashedr/esphome-configs/include/va/voice_assistant.yaml@master
# voice_assistant: !include
#   file: include/va/voice_assistant.yaml
#   vars:
#     microphone: va_mic
#     script_va_start: va_start
#     sorting_weight: -30

substitutions:
  microphone: "va_mic"
  script_va_start: "va_start"
  sorting_weight: "-30"

web_server:
  version: 3
  sorting_groups:
    - id: sg_va
      name: "Voice Assistant"
      sorting_weight: ${sorting_weight}

voice_assistant:
  id: va
  microphone: ${microphone}
  #speaker: va_speaker
  #media_player: va_media
  auto_gain: 31dBFS
  noise_suppression_level: 2
  volume_multiplier: 2.0
  conversation_timeout: 180s
  #use_wake_word: false

  on_idle:
    then:
      - logger.log: "voice_assistant on_idle"

  on_client_connected:
    then:
      - logger.log: "voice_assistant on_client_connected"
  on_client_disconnected:
    then:
      - logger.log: "voice_assistant on_client_disconnected"

  on_wake_word_detected:
    then:
      - logger.log: "voice_assistant on_wake_word_detected"

  on_start:
    then:
      - logger.log: "voice_assistant on_start"

  on_listening:
    then:
      # Listening - We are listening to what you are saying for processing
      - logger.log: "voice_assistant on_listening"

  on_stt_vad_start:
    then:
      - logger.log: "voice_assistant on_stt_vad_start"
  on_stt_vad_end:
    then:
      # STT Start - We are done listening and starting to process stt
      - logger.log: "voice_assistant on_stt_vad_end"

  on_stt_end:
    then:
      # STT End - We have processed what you said as text
      - logger.log:
          format: "voice_assistant on_stt_end text: %s"
          args: ["x.c_str()"]
          level: INFO

  on_intent_start:
    then:
      - logger.log: "voice_assistant on_intent_start"
  on_intent_end:
    then:
      - logger.log: "voice_assistant on_intent_end"

  on_tts_start:
    then:
      # TTS Start - We now have the response text from the VA
      - logger.log:
          format: "voice_assistant on_tts_start text: %s"
          args: ["x.c_str()"]
          level: INFO
  on_tts_end:
    then:
      # TTS End - We now have a URL to the response audio from the VA
      - logger.log:
          format: "voice_assistant on_tts_end url: %s"
          args: ["x.c_str()"]
          level: INFO

  on_end:
    then:
      # DONE - We are done, restart micro_wake_word when VA is done...
      - logger.log:
          format: "voice_assistant on_end"
          level: INFO

  on_error:
    then:
      # ERROR - You fucked up Chuck!
      - lambda: |-
          ESP_LOGW("va", "voice_assistant on_error");
          ESP_LOGW("va", "code: %s", code.c_str());
          ESP_LOGW("va", "message: %s", message.c_str());

button:
  - platform: template
    name: "Activate Assistant ${box_num}"
    id: btn_va_activate
    icon: mdi:microphone
    on_press:
      - logger.log: "script.execute: ${script_va_start}"
      - script.execute: ${script_va_start}
    web_server:
      sorting_group_id: sg_va
      sorting_weight: 30

switch:
  - platform: template
    name: "Enable Continuous ${box_num}"
    id: enable_continuous
    icon: mdi:account-voice
    disabled_by_default: true
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - logger.log: "Enable Continuous"
      - if:
          condition:
            - voice_assistant.is_running:
          then:
            - logger.log: "enable_continuous: voice_assistant.stop:"
            - voice_assistant.stop:
            - wait_until:
                condition:
                  - not:
                      - voice_assistant.is_running:
                      - microphone.is_capturing:
      - logger.log: "enable_continuous: voice_assistant.start_continuous"
      - lambda: "id(va).set_use_wake_word(true);"
      - voice_assistant.start_continuous:
    on_turn_off:
      - logger.log: "Disable Continuous"
      - voice_assistant.stop:
      - lambda: "id(va).set_use_wake_word(false);"
    web_server:
      sorting_group_id: sg_va
      sorting_weight: 20
