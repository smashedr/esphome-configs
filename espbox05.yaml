# PM Sensor - Living Room
# TODO: Make pmsx003 package...

substitutions:
  # https://esphome.io/components/substitutions
  box_num: "05"
  box_name: "espbox"
  type: "esp32"
  board: "nodemcu-32s"
  comment: "38-pin narrow"
  pms_num: "01"

packages:
  # https://esphome.io/components/packages.html
  common: !include { file: include/common.yaml }
  status_led: !include
    file: include/status_led.yaml
    vars:
      pin: GPIO25
      status_led: green_led

light:
  # https://esphome.io/components/light/
  - platform: binary
    id: red_led
    output: red_o
  - platform: binary
    id: yellow_led
    output: yellow_o

output:
  - platform: gpio
    id: red_o
    pin: 32
  - platform: gpio
    id: yellow_o
    pin: 33

uart:
  rx_pin: 16
  tx_pin: 17
  baud_rate: 9600
  #debug:
  #  direction: BOTH
  #  dummy_receiver: false
  #  after:
  #    delimiter: "\n"
  #  sequence:
  #    - lambda: UARTDebug::log_string(direction, bytes);

sensor:
  - platform: pmsx003
    type: PMSX003
    update_interval: 2.5min
    pm_1_0:
      name: "PM 1.0 ${pms_num}"
      force_update: ${force_update}
    pm_2_5:
      name: "PM 2.5 ${pms_num}"
      force_update: ${force_update}
      on_value_range:
        - below: 150
          then:
            - light.turn_on: green_led
            - light.turn_off: yellow_led
            - light.turn_off: red_led
        - above: 150
          below: 300
          then:
            - light.turn_on: yellow_led
            - light.turn_off: green_led
            - light.turn_off: red_led
        - above: 300
          then:
            - light.turn_on: red_led
            - light.turn_off: green_led
            - light.turn_off: yellow_led
    pm_10_0:
      name: "PM 10.0 ${pms_num}"
      force_update: ${force_update}
