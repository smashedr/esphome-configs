# BENCHED - VA TEST 2

substitutions:
  # https://esphome.io/components/substitutions
  friendly_name: "Test Box 52"
  box_num: "52"
  box_name: "esptest"
  type: "esp32"
  board: "esp32dev"
  comment: "38-pin"

packages:
  # https://esphome.io/components/packages.html
  debug: !include { file: include/debug.yaml }
  common: !include { file: include/common.yaml }
  voice_assistant: !include { file: include/va/voice_assistant.yaml }
  micro_wake_word: !include
    file: include/va/micro_wake_word.yaml
    vars:
      model: models/computer.json
  discord_logs: !include
    file: include/va/discord.yaml
    vars:
      channel_id: !secret discord_va_id

#external_components:
#  - source: github://jesserockz/esphome-components
#    components: [udp_audio]
#
#udp_audio:
#  ip_address: 192.168.1.20
#  port: 6056

${type}:
  # https://esphome.io/#supported-microcontrollers
  framework:
    sdkconfig_options:
      CONFIG_ESP32_DEFAULT_CPU_FREQ_240: "y"

esphome:
  # https://esphome.io/components/esphome
  on_boot:
    - priority: 600
      then:
        - logger.log: "Boot 600"
        - light.turn_on:
            id: main_led
            effect: "Full Pulse"
    - priority: -100
      then:
        - logger.log: "Boot -100"
        - wait_until:
            - api.connected:
        #- light.turn_off: main_led
        - if:
            condition:
              - switch.is_on: micro_wake_toggle
            then:
              - light.turn_off: main_led
            else:
              - light.turn_on:
                  id: main_led
                  brightness: 20%
                  effect: None

light:
  # https://esphome.io/components/light/
  - platform: monochromatic
    name: "Monochromatic Light ${box_num}"
    id: main_led
    icon: mdi:lightbulb-outline
    disabled_by_default: true
    output: main_ledc
    effects: !include { file: include/light/effects/pulse.yaml }
    #web_server:
    #  sorting_group_id: sg_lights
    #  sorting_weight: 10

script:
  # https://esphome.io/components/script
  - id: !extend va_end
    then:
      #- light.turn_off: main_led
      - script.execute: turn_off_led

  - id: turn_off_led
    mode: restart
    then:
      - logger.log: "Running script: turn_off_led"
      - if:
          condition:
            - switch.is_on: micro_wake_toggle
          then:
            - logger.log: "Switch micro_wake_toggle is ON: light.turn_off"
            - light.turn_off:
                id: main_led
                transition_length: 0s
          else:
            - logger.log: "Switch micro_wake_toggle is ON: light.turn_on"
            - light.turn_on:
                id: main_led
                brightness: 20%
                effect: None

voice_assistant:
  # https://esphome.io/components/voice_assistant
  on_listening:
    then:
      # Listening - We are listening to what you are saying for processing
      - light.turn_on:
          id: main_led
          brightness: 75%
          transition_length: 0s

  on_stt_vad_end:
    then:
      # STT Start - We are done listening and starting to process stt
      - light.turn_on:
          id: main_led
          effect: "Fast Pulse"

  on_tts_start:
    then:
      # TTS Start - We now have the response text from the VA
      - homeassistant.action:
          action: notify.alexa_media
          data:
            target: media_player.kitchen
          data_template:
            message: "{{ message }}"
          variables:
            message: |-
              return x.c_str();

  on_end:
    then:
      # DONE - We are done, restart micro_wake_word when VA is done...
      - script.execute: va_end

  on_error:
    then:
      # ERROR - You fucked up Chuck!
      - lambda: |-
          char formatted_message[128];
          snprintf(formatted_message, sizeof(formatted_message), "Error[%s]: %s", 
              code.c_str(), message.c_str());
          ESP_LOGI("va", "formatted_message: %s", formatted_message);

      # TODO: verify that on_end does not trigger simultaneously with on_error
      - script.execute: va_end

microphone:
  # https://esphome.io/components/microphone/
  - platform: i2s_audio
    id: va_mic
    i2s_audio_id: i2s_in
    i2s_din_pin: GPIO33 # SD - green
    adc_type: external
    #channel: left
    #pdm: false
    #bits_per_sample: 32bit

i2s_audio:
  # https://esphome.io/components/microphone/i2s_audio
  id: i2s_in
  i2s_lrclk_pin: GPIO25 # WS - blue
  i2s_bclk_pin: GPIO32 # SCK - yellow

output:
  # https://esphome.io/components/output/
  - platform: ledc
    id: main_ledc
    pin: GPIO26
    max_power: 80%

switch:
  # https://esphome.io/#switch-components
  #- id: !remove enable_continuous
  - id: !extend micro_wake_toggle
    turn_on_action:
      - logger.log: "micro_wake_toggle: turn_on_action"
      - if:
          condition:
            not:
              voice_assistant.is_running:
          then:
            - logger.log: "micro_wake_toggle: wait_until: switch.is_on:"
            - wait_until:
                switch.is_on: micro_wake_toggle
            - logger.log: "micro_wake_toggle: script.execute: turn_off_led"
            - script.execute: turn_off_led
    turn_off_action:
      - logger.log: "micro_wake_toggle: turn_off_action"
      - if:
          condition:
            not:
              voice_assistant.is_running:
          then:
            - logger.log: "micro_wake_toggle: light.turn_on: 20"
            - light.turn_on:
                id: main_led
                brightness: 20%

  #- platform: template
  #  name: "Start Capture ${box_num}"
  #  id: start_capture
  #  icon: mdi:account-voice
  #  optimistic: true
  #  #restore_mode: RESTORE_DEFAULT_ON
  #  turn_on_action:
  #    - logger.log: "microphone.capture: va_mic"
  #    - microphone.capture: va_mic
  #    - light.turn_on: main_led
  #  turn_off_action:
  #    - logger.log: "microphone.stop_capture: va_mic"
  #    - microphone.stop_capture: va_mic
  #    - light.turn_off: main_led

binary_sensor:
  # https://esphome.io/#binary-sensor-components
  - platform: gpio
    name: "Touch 1 - ${box_num}"
    id: touch_1
    icon: mdi:gesture-tap-box
    pin:
      number: GPIO27
      mode: INPUT_PULLUP
    on_multi_click:
      - timing:
          - ON for at most 0.9s
        then:
          - logger.log: "Single Click - Start Voice"
          - script.execute: va_start
      - timing:
          - ON for at least 1s
        then:
          - logger.log: "2+ Second Touch - Toggle Wake"
          - switch.toggle: micro_wake_toggle
          #- light.turn_on:
          #    id: main_led
          #    brightness: 100%
          #    transition_length: 0s
          #- delay: 500ms
          #- light.turn_off: main_led
